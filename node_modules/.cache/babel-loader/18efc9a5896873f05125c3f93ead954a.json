{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sagi Dahan\\\\Desktop\\\\facerecognitionbrain\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport Navigation from './components/Navigation/Navigation';\nimport SignIn from './components/SignIn/SignIn';\nimport Register from './components/Register/Register';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport './App.css';\nconst particlesOptions = {\n  particles: {\n    line_linked: {\n      shadow: {\n        enable: true,\n        color: \"#3CA9D1\",\n        blur: 5\n      }\n    }\n  }\n};\nconst initialState = {\n  input: '',\n  imageUrl: '',\n  box: {},\n  route: 'signin',\n  // keeps track of where we are on the page\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: ''\n  }\n};\n\nclass App extends Component {\n  // we need to detect what the user enters in the ImageLinkForm\n  // so we need to create state so that our app knows what the value is the the user enters, remembers it and updates it every time it get changed.\n  // in order to do that we will define a constructor, within the constructor we call super() to be able to use \"this\"\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height); // we want to return here an object, and this object is gonna be whats going to fill up the box state. this object will first need to figure out the first dot then the second dot then the third dot then the fourth dot and we are going to wrap it in a border.\n\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      console.log(box);\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      }); // receive the body with the url\n\n      fetch('http://localhost:3000/imageurl', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          input: this.state.input\n        })\n      }).then(response => response.json()).then(response => {\n        if (response) {\n          fetch('http://localhost:3000/image', {\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          }).then(response => response.json()).then(count => {\n            this.setState(Object.assign(this.state.user, {\n              entries: count\n            }));\n          }).catch(console.log);\n        }\n\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      }).catch(err => console.log(err));\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'signout') {\n        this.setState(initialState);\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = initialState;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Particles, {\n      className: \"particles\",\n      params: particlesOptions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Navigation, {\n      isSignedIn: this.state.isSignedIn,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }\n    }), this.state.route === 'home' ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(Logo, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Rank, {\n      name: this.state.user.name,\n      entries: this.state.user.entries,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 12\n      }\n    }), /*#__PURE__*/React.createElement(ImageLinkForm, {\n      onInputChange: this.onInputChange,\n      onButtonSubmit: this.onButtonSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 12\n      }\n    }), /*#__PURE__*/React.createElement(FaceRecognition, {\n      box: this.state.box,\n      imageUrl: this.state.imageUrl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 12\n      }\n    })) : this.state.route === 'signin' ? /*#__PURE__*/React.createElement(SignIn, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 14\n      }\n    }) : /*#__PURE__*/React.createElement(Register, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 14\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Sagi Dahan/Desktop/facerecognitionbrain/src/App.js"],"names":["React","Component","Particles","Navigation","SignIn","Register","FaceRecognition","Logo","ImageLinkForm","Rank","particlesOptions","particles","line_linked","shadow","enable","color","blur","initialState","input","imageUrl","box","route","isSignedIn","user","id","name","email","entries","joined","App","constructor","loadUser","data","setState","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","console","log","onInputChange","event","target","value","onButtonSubmit","state","fetch","method","headers","body","JSON","stringify","then","response","json","count","Object","assign","catch","err","onRouteChange","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Particles from 'react-particles-js';\nimport Navigation from './components/Navigation/Navigation';\nimport SignIn from './components/SignIn/SignIn';\nimport Register from './components/Register/Register';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport './App.css';\n\nconst particlesOptions = {\n  particles: {\n    line_linked: {\n      shadow: {\n        enable: true,\n        color: \"#3CA9D1\",\n        blur: 5\n      }\n    }\n  }\n}\n\nconst initialState = {\n\tinput: '',\n\timageUrl: '',\n\tbox: {},\n\troute: 'signin', // keeps track of where we are on the page\n\tisSignedIn: false,\n\tuser: {\n\t\tid:'',\n\t\tname: '',\n\t\temail: '',\n\t\tentries: 0,\n\t\tjoined: ''\n\t}\n}\nclass App extends Component {\n\t// we need to detect what the user enters in the ImageLinkForm\n\t// so we need to create state so that our app knows what the value is the the user enters, remembers it and updates it every time it get changed.\n\t// in order to do that we will define a constructor, within the constructor we call super() to be able to use \"this\"\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = initialState;\n\t}\n\n\tloadUser = (data) => {\n\t\tthis.setState({user: {\n\t\t\tid: data.id,\n\t\t\tname: data.name,\n\t\t\temail: data.email,\n\t\t\tentries: data.entries,\n\t\t\tjoined: data.joined\n\t\t}})\n\t}\n\n\t// communicate with server\n\t// componentDidMount() {\n\t// \tfetch('http://localhost:3000/')\n\t// \t\t.then(response => response.json())\n\t// \t\t.then(console.log)\n\t// }\n\n\tcalculateFaceLocation = (data) => {\n\t\tconst clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n\t\tconst image = document.getElementById('inputimage');\n\t\tconst width = Number(image.width);\n\t\tconst height = Number(image.height);\n\t\t// we want to return here an object, and this object is gonna be whats going to fill up the box state. this object will first need to figure out the first dot then the second dot then the third dot then the fourth dot and we are going to wrap it in a border.\n\t\treturn {\n\t\t\tleftCol: clarifaiFace.left_col * width,\n\t\t\ttopRow: clarifaiFace.top_row * height,\n\t\t\trightCol: width - (clarifaiFace.right_col * width),\n\t\t\tbottomRow: height - (clarifaiFace.bottom_row * height)\n\t\t}\n\t}\n\n\tdisplayFaceBox = (box) => {\n\t\tconsole.log(box);\n\t\tthis.setState({box: box});\n\t}\n\n\tonInputChange = (event) => {\n\t\tthis.setState({input: event.target.value});\n\t}\n\n\tonButtonSubmit = () => {\n\t\tthis.setState({imageUrl: this.state.input});\n\t\t// receive the body with the url\n\t\tfetch('http://localhost:3000/imageurl', {\n\t\t\tmethod: 'post',\n\t\t\theaders: {'Content-Type': 'application/json'},\n\t\t\tbody: JSON.stringify({\n\t\t\t\tinput: this.state.input\n\t\t\t})\n\t\t})\n\t\t.then(response => response.json())\n\t\t.then(response => {\n\t\t\tif (response) {\n\t\t\t\tfetch('http://localhost:3000/image', {\n\t\t\t\t\tmethod: 'put',\n\t\t\t\t\theaders: {'Content-Type': 'application/json'},\n\t\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\t\tid: this.state.user.id\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t\t.then(response => response.json())\n\t\t\t\t.then(count => {\n\t\t\t\t\tthis.setState(Object.assign(this.state.user, { entries: count}))\n\t\t\t\t})\n\t\t\t\t.catch(console.log)\n\t\t\t}\n\t\t\tthis.displayFaceBox(this.calculateFaceLocation(response))\n\t\t})\n\t\t.catch(err => console.log(err))\n\t}\n\n\tonRouteChange = (route) => {\n\t\tif (route === 'signout') {\n\t\t\tthis.setState(initialState)\n\t\t} else if (route === 'home') {\n\t\t\tthis.setState({isSignedIn: true})\n\t\t}\n\t\tthis.setState({route: route});\n\t}\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Particles className='particles'\n          params={particlesOptions}\n        />\n        <Navigation isSignedIn={this.state.isSignedIn} onRouteChange={this.onRouteChange}/>\n        { this.state.route === 'home' \n        \t? <div>\n\t\t\t      \t<Logo />\n\t\t\t        <Rank name={this.state.user.name} entries={this.state.user.entries} />\n\t\t\t        <ImageLinkForm \n\t\t\t\t        onInputChange={this.onInputChange} \n\t\t\t\t        onButtonSubmit={this.onButtonSubmit}\n\t\t\t        />\n\t\t\t        <FaceRecognition box={this.state.box} imageUrl={this.state.imageUrl}/>\n\t\t        </div>\n        \t: (\n        \t\t\tthis.state.route === 'signin'\n        \t\t\t? <SignIn loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n        \t\t\t: <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n        \t\t)\n\t\t        \n      \t}\n      </div>\n    );\n  }\n  \n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}